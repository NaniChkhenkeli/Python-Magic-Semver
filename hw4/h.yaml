openapi: 3.0.3
info:
  title: Student Management API
  description: REST API for managing students
  version: 1.0.0
servers:
  - url: https://api.example.com/v1
    description: Production server

paths:
  /students:
    get:
      summary: Get all students
      description: Retrieve a list of students
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Number of students per page
      responses:
        "200":
          description: List of students
          content:
            application/json:
              example:
                students:
                  - id: "1"
                    first_name: "John"
                    last_name: "Doe"
                    email: "john.doe@email.com"
                    room_id: "101"
                    status: "active"
                  - id: "2"
                    first_name: "Jane"
                    last_name: "Smith"
                    email: "jane.smith@email.com"
                    room_id: null
                    status: "active"
                total_count: 2
                page: 1
                limit: 20
        "500":
          $ref: "#/components/responses/InternalServerError"

    post:
      summary: Create a new student
      description: Add a student to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StudentCreate"
            examples:
              create_student:
                value:
                  first_name: "Alice"
                  last_name: "Johnson"
                  email: "alice.johnson@email.com"
                  room_id: "101"
      responses:
        "201":
          description: Student created successfully
          content:
            application/json:
              example:
                id: "3"
                first_name: "Alice"
                last_name: "Johnson"
                email: "alice.johnson@email.com"
                room_id: "101"
                status: "active"
        "400":
          $ref: "#/components/responses/BadRequest"
        "409":
          $ref: "#/components/responses/Conflict"

  /students/{id}:
    get:
      summary: Get student by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Student unique ID
      responses:
        "200":
          description: Student details
          content:
            application/json:
              example:
                id: "1"
                first_name: "John"
                last_name: "Doe"
                email: "john.doe@email.com"
                room_id: "101"
                status: "active"
        "404":
          $ref: "#/components/responses/StudentNotFound"

    put:
      summary: Update student
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Student unique ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StudentUpdate"
            examples:
              update_student:
                value:
                  first_name: "John"
                  last_name: "Doe-Smith"
                  email: "john.doe-smith@email.com"
                  room_id: "102"
      responses:
        "200":
          description: Student updated successfully
          content:
            application/json:
              example:
                id: "1"
                first_name: "John"
                last_name: "Doe-Smith"
                email: "john.doe-smith@email.com"
                room_id: "102"
                status: "active"
        "404":
          $ref: "#/components/responses/StudentNotFound"
        "400":
          $ref: "#/components/responses/BadRequest"

    delete:
      summary: Delete student
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Student unique ID
      responses:
        "204":
          description: Student deleted successfully
        "404":
          $ref: "#/components/responses/StudentNotFound"
        "409":
          description: Conflict
          content:
            application/json:
              example:
                error_code: "STUDENT_HAS_DEPENDENCIES"
                message: "Cannot delete student with active assignments"

components:
  schemas:
    StudentCreate:
      type: object
      required:
        - first_name
        - last_name
        - email
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        room_id:
          type: string
          nullable: true

    StudentUpdate:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        room_id:
          type: string
          nullable: true

  responses:
    BadRequest:
      description: Invalid input
      content:
        application/json:
          example:
            error_code: "BAD_REQUEST"
            message: "Invalid input data"
            details: "Email is required"
    StudentNotFound:
      description: Student not found
      content:
        application/json:
          example:
            error_code: "STUDENT_NOT_FOUND"
            message: "Student with the specified ID does not exist"
    Conflict:
      description: Resource conflict
    InternalServerError:
      description: Unexpected server error
      content:
        application/json:
          example:
            error_code: "INTERNAL_ERROR"
            message: "Unexpected server error"
